{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\src\\\\HOC\\\\WithAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport const WithAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/HOC/WithAuthRedirect.js"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","render","props","ConnectedAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,0BAA0B,GAAGC,KAAK,IAAI;AACxC,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADd,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAME,gBAAgB,GAAGC,SAAS,IAAI;AAC3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC9CE,IAAAA,MAAM,GAAG;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,aAAO,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAJ6C;;AAOhD,MAAIC,8BAA8B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CACnCM,iBADmC,CAArC;AAGA,SAAOG,8BAAP;AACD,CAZM","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport const WithAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}