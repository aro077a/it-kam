{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst getUsersSelector = state => {\n  return state.usersPage.users;\n};\n\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/redux/usersSelectors.js"],"names":["createSelector","getUsersSelector","state","usersPage","users","getUsers","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACD,CAFD;;AAGA,OAAO,MAAMC,QAAQ,GAAGL,cAAc,CAACC,gBAAD,EAAmBG,KAAK,IAAI;AAChE,SAAOA,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACD,CAFqC,CAA/B;AAGP,OAAO,MAAMC,WAAW,GAAGN,KAAK,IAAI;AAClC,SAAOA,KAAK,CAACC,SAAN,CAAgBM,QAAvB;AACD,CAFM;AAGP,OAAO,MAAMC,kBAAkB,GAAGR,KAAK,IAAI;AACzC,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,eAAvB;AACD,CAFM;AAGP,OAAO,MAAMC,cAAc,GAAGV,KAAK,IAAI;AACrC,SAAOA,KAAK,CAACC,SAAN,CAAgBU,WAAvB;AACD,CAFM;AAGP,OAAO,MAAMC,aAAa,GAAGZ,KAAK,IAAI;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBY,UAAvB;AACD,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAGd,KAAK,IAAI;AAC7C,SAAOA,KAAK,CAACC,SAAN,CAAgBc,mBAAvB;AACD,CAFM","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = state => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector(getUsersSelector, users => {\r\n  return users.filter(u => true);\r\n});\r\nexport const getPageSize = state => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = state => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = state => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = state => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = state => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}