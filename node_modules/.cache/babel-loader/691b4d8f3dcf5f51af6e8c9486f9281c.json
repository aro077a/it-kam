{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { getAuthUserData } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\nlet initialState = {\n  initialized: false\n};\ndebugger;\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      console.log(\"TCL: appReducer -> state\", state);\n      return state;\n  }\n};\n\ndebugger;\nexport const initializedSuccess = () => ({\n  type: \"INITIALIZED_SUCCESS\"\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  debugger;\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/redux/appReducer.js"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","console","log","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":";AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAAnB;AAGA;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,mBAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,WAAW,EAAE;AAFf;;AAIF;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,KAAxC;AACA,aAAOA,KAAP;AARJ;AAUD,CAXD;;AAYA;AACA,OAAO,MAAMK,kBAAkB,GAAG,OAAO;AACvCH,EAAAA,IAAI,EAAE;AADiC,CAAP,CAA3B;AAIP,OAAO,MAAMI,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACZ,eAAe,EAAhB,CAAtB;AACA;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAM;AAChCJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACD,GAFD;AAGD,CANM;AAQP,eAAeN,UAAf","sourcesContent":["import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\ndebugger;\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      console.log(\"TCL: appReducer -> state\", state);\r\n      return state;\r\n  }\r\n};\r\ndebugger;\r\nexport const initializedSuccess = () => ({\r\n  type: \"INITIALIZED_SUCCESS\"\r\n});\r\n\r\nexport const initializeApp = () => dispatch => {\r\n  let promise = dispatch(getAuthUserData());\r\n  debugger;\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n"]},"metadata":{},"sourceType":"module"}