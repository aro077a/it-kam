{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nlet initialState = {\n  users: [],\n  pageSize: 50,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: updateObjectInArray(state.users, action.userId, \"Id\", {\n          followed: false\n        })\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_USERS_COUNT:\n      return _objectSpread({}, state, {\n        totalUsersCount: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: \"FOLLOW\",\n  userId\n});\nexport const unFollowSuccess = userId => ({\n  type: \"UNFOLLOW\",\n  userId\n});\nexport const setUsers = users => ({\n  type: \"SET_USERS\",\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: \"SET_CURRENT-PAGE\",\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: \"SET_TOTAL_USERS_COUNT\",\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: \"TOGGLE_IS_FETCHING\",\n  isFetching\n});\nexport const toggleFollowingProgress = isFetching => ({\n  type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\n  isFetching\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount));\n  };\n};\n\nconst followUnFollowFLow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch.toggleFollowingProgress(true, userId);\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    followUnFollowFLow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), followSuccess);\n  };\n};\nexport const unFollow = userId => {\n  return async dispatch => {\n    followUnFollowFLow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/redux/userReducer.js"],"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","filter","id","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnFollowFLow","apiMethod","actionCreator","response","resultCode","follow","unFollow","bind"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 50,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true\r\n        })\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"Id\", {\r\n          followed: false\r\n        })\r\n      };\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = userId => ({\r\n  type: \"FOLLOW\",\r\n  userId\r\n});\r\n\r\nexport const unFollowSuccess = userId => ({\r\n  type: \"UNFOLLOW\",\r\n  userId\r\n});\r\nexport const setUsers = users => ({\r\n  type: \"SET_USERS\",\r\n  users\r\n});\r\nexport const setCurrentPage = currentPage => ({\r\n  type: \"SET_CURRENT-PAGE\",\r\n  currentPage\r\n});\r\nexport const setUsersTotalCount = totalUsersCount => ({\r\n  type: \"SET_TOTAL_USERS_COUNT\",\r\n  count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = isFetching => ({\r\n  type: \"TOGGLE_IS_FETCHING\",\r\n  isFetching\r\n});\r\nexport const toggleFollowingProgress = isFetching => ({\r\n  type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n  isFetching\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return async dispatch => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersTotalCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnFollowFLow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch.toggleFollowingProgress(true, userId);\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = userId => {\r\n  return async dispatch => {\r\n    followUnFollowFLow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.unFollow.bind(usersAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\nexport const unFollow = userId => {\r\n  return async dispatch => {\r\n    followUnFollowFLow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.unFollow.bind(usersAPI),\r\n      unFollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n"]},"metadata":{},"sourceType":"module"}