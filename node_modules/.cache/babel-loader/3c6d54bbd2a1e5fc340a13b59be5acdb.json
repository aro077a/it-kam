{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return React.createElement(\"div\", {\n    className: styles.paginator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, portionNumber > 1 && React.createElement(\"button\", {\n    className: styles.nextPage,\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, p);\n  }), portionCount > portionNumber && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"NEXT\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/components/common/Paginator/Paginator.js"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","nextPage","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,IAAIC,SAAS,GAAG,CAAC;AACfC,EAAAA,eADe;AAEfC,EAAAA,QAFe;AAGfC,EAAAA,WAHe;AAIfC,EAAAA,aAJe;AAKfC,EAAAA,WAAW,GAAG;AALC,CAAD,KAMV;AACJ,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AARI,kBASoCR,QAAQ,CAAC,CAAD,CAT5C;AAAA;AAAA,MASCgB,aATD;AAAA,MASgBC,gBAThB;;AAUJ,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,SACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,aAAa,GAAG,CAAhB,IACC;AACE,IAAA,SAAS,EAAEf,MAAM,CAACoB,QADpB;AAEE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYGJ,KAAK,CACHU,MADF,CACSC,CAAC,IAAIA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAIJ,sBADjD,EAEEK,GAFF,CAEMD,CAAC,IAAI;AACR,WACE;AACE,MAAA,SAAS,EAAErB,EAAE,CACX;AACE,SAACD,MAAM,CAACwB,YAAR,GAAuBnB,WAAW,KAAKiB;AADzC,OADW,EAIXtB,MAAM,CAACyB,UAJI,CADf;AAOE,MAAA,GAAG,EAAEH,CAPP;AAQE,MAAA,OAAO,EAAEI,CAAC,IAAI;AACZpB,QAAAA,aAAa,CAACgB,CAAD,CAAb;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYGA,CAZH,CADF;AAgBD,GAnBF,CAZH,EAgCGR,YAAY,GAAGC,aAAf,IACC;AACE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCJ,CADF;AA4CD,CA/DD;;AAiEA,eAAeb,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          className={styles.nextPage}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={e => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}