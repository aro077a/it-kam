{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Aro\\\\Desktop\\\\it-kam-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport usersAPI, { profileAPI } from \"../api/api\";\nconst ADD_POST = \"ADD_POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi how are you ?\",\n    likesCount: 12\n  }, {\n    id: 2,\n    message: \"Thanks, fine\",\n    likesCount: 2\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 3,\n        message: action.newPostText,\n        likesCount: 0\n      };\n      return _objectSpread({}, state, {\n        posts: [...state.posts, newPost],\n        newPostText: \"\"\n      });\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: state.posts.filter(p => p.id !== action.postId)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const getUserProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Aro/Desktop/it-kam-master/src/redux/profileReducer.js"],"names":["usersAPI","profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostActionCreator","setUserProfile","setStatus","deletePost","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import usersAPI, { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi how are you ?\", likesCount: 12 },\r\n\r\n    { id: 2, message: \"Thanks, fine\", likesCount: 2 }\r\n  ],\r\n  profile: null,\r\n  status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostText,\r\n        likesCount: 0\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: \"\"\r\n      };\r\n\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    }\r\n    case DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postId)\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = newPostText => ({\r\n  type: ADD_POST,\r\n  newPostText\r\n});\r\nexport const setUserProfile = profile => ({\r\n  type: SET_USER_PROFILE,\r\n  profile\r\n});\r\nexport const setStatus = status => ({\r\n  type: SET_STATUS,\r\n  status\r\n});\r\nexport const deletePost = postId => ({\r\n  type: DELETE_POST,\r\n  postId\r\n});\r\nexport const getUserProfile = userId => async dispatch => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = userId => async dispatch => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = status => async dispatch => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n"]},"metadata":{},"sourceType":"module"}